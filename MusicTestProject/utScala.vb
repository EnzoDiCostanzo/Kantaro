Imports System.Text
Imports Microsoft.VisualStudio.TestTools.UnitTesting

<TestClass()> Public Class utScala

    <TestMethod()> Public Sub ScalaMaggioreDO()
        Dim scala As New Scala(Nota.DO, ModoMaggiore.GetInstance)
        Assert.AreEqual(Nota.DO, scala.NotaFondamentale)
        Assert.AreEqual(Nota.DO, scala(0))
        Assert.AreEqual(Nota.RE, scala(1))
        Assert.AreEqual(Nota.MI, scala(2))
        Assert.AreEqual(Nota.FA, scala(3))
        Assert.AreEqual(Nota.SOL, scala(4))
        Assert.AreEqual(Nota.LA, scala(5))
        Assert.AreEqual(Nota.SI, scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreDOdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.DOdiesis), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala.NotaFondamentale)
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreRE()
        Dim scala As New Scala(New Nota(NotaEnum.RE), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.RE), scala.NotaFondamentale)
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreREdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.REdiesis), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreMI()
        Dim scala As New Scala(New Nota(NotaEnum.MI), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreFA()
        Dim scala As New Scala(New Nota(NotaEnum.FA), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreFAdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.FAdiesis), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreSOL()
        Dim scala As New Scala(New Nota(NotaEnum.SOL), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreSOLdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.SOLdiesis), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreLA()
        Dim scala As New Scala(New Nota(NotaEnum.LA), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreLAdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.LAdiesis), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMaggioreSI()
        Dim scala As New Scala(New Nota(NotaEnum.SI), ModoMaggiore.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(6))
    End Sub

    <TestMethod()> Public Sub ScalaMinoreNaturaleDO()
        Dim scala As New Scala(New Nota(NotaEnum.[DO]), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleDOdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.DOdiesis), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleRE()
        Dim scala As New Scala(New Nota(NotaEnum.RE), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleREdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.REdiesis), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleMI()
        Dim scala As New Scala(New Nota(NotaEnum.MI), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleFA()
        Dim scala As New Scala(New Nota(NotaEnum.FA), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleFAdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.FAdiesis), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleSOL()
        Dim scala As New Scala(New Nota(NotaEnum.SOL), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleSOLdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.SOLdiesis), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleLA()
        Dim scala As New Scala(New Nota(NotaEnum.LA), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleLAdiesis()
        Dim scala As New Scala(New Nota(NotaEnum.LAdiesis), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.LAdiesis), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.[DO]), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.REdiesis), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.FA), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.SOLdiesis), scala(6))
    End Sub
    <TestMethod()> Public Sub ScalaMinoreNaturaleSI()
        Dim scala As New Scala(New Nota(NotaEnum.SI), ModoMinoreNaturale.GetInstance)
        Assert.AreEqual(New Nota(NotaEnum.SI), scala(0))
        Assert.AreEqual(New Nota(NotaEnum.DOdiesis), scala(1))
        Assert.AreEqual(New Nota(NotaEnum.RE), scala(2))
        Assert.AreEqual(New Nota(NotaEnum.MI), scala(3))
        Assert.AreEqual(New Nota(NotaEnum.FAdiesis), scala(4))
        Assert.AreEqual(New Nota(NotaEnum.SOL), scala(5))
        Assert.AreEqual(New Nota(NotaEnum.LA), scala(6))
    End Sub
End Class